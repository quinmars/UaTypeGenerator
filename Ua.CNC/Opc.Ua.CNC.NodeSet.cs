// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------

[assembly: Workstation.ServiceModel.Ua.TypeLibrary]
namespace Ua.CNC
{
    /// <summary>
    /// Status of a CNC axis.
    /// </summary>
    /// <seealso href="https://reference.opcfoundation.org/v104/CNC/v100/docs/7.2.1" />
    [Workstation.ServiceModel.Ua.DataTypeId("nsu=http://opcfoundation.org/UA/CNC;i=3004")]
    public enum CncAxisStatus
    {
        /// <summary>
        /// Axis reached commanded position
        /// </summary>
        InPosition = 0,
        /// <summary>
        /// Axis is moving to reach commanded position
        /// </summary>
        Moving = 1,
        /// <summary>
        /// Axis is configured but not active
        /// </summary>
        Parked = 2,
    }
    
    /// <summary>
    /// Status of program execution within a channel.
    /// </summary>
    /// <seealso href="https://reference.opcfoundation.org/v104/CNC/v100/docs/7.2.5" />
    [Workstation.ServiceModel.Ua.DataTypeId("nsu=http://opcfoundation.org/UA/CNC;i=3002")]
    public enum CncChannelProgStatus
    {
        /// <summary>
        /// Channel program stopped
        /// </summary>
        Stopped = 0,
        /// <summary>
        /// Channel program running
        /// </summary>
        Running = 1,
        /// <summary>
        /// Channel program in waiting state
        /// </summary>
        Waiting = 2,
        /// <summary>
        /// Channel program interrupted
        /// </summary>
        Interrupted = 3,
        /// <summary>
        /// Channel program canceled
        /// </summary>
        Canceled = 4,
    }
    
    /// <summary>
    /// Status of a CNC channel.
    /// </summary>
    /// <seealso href="https://reference.opcfoundation.org/v104/CNC/v100/docs/7.2.4" />
    [Workstation.ServiceModel.Ua.DataTypeId("nsu=http://opcfoundation.org/UA/CNC;i=3003")]
    public enum CncChannelStatus
    {
        /// <summary>
        /// Channel active
        /// </summary>
        Active = 0,
        /// <summary>
        /// Channel interrupted
        /// </summary>
        Interrupted = 1,
        /// <summary>
        /// Channel resetting
        /// </summary>
        Reset = 2,
    }
    
    /// <summary>
    /// Modes of operation.
    /// </summary>
    /// <seealso href="https://reference.opcfoundation.org/v104/CNC/v100/docs/7.2.6" />
    [Workstation.ServiceModel.Ua.DataTypeId("nsu=http://opcfoundation.org/UA/CNC;i=3006")]
    public enum CncOperationMode
    {
        Manual = 0,
        MDA = 1,
        Automatic = 2,
    }
    
    /// <summary>
    /// Status of a CNC spindle.
    /// </summary>
    /// <seealso href="https://reference.opcfoundation.org/v104/CNC/v100/docs/7.2.2" />
    [Workstation.ServiceModel.Ua.DataTypeId("nsu=http://opcfoundation.org/UA/CNC;i=3005")]
    public enum CncSpindleStatus
    {
        /// <summary>
        /// Spindle stopped
        /// </summary>
        Stopped = 0,
        /// <summary>
        /// Spindle reached commanded velocity
        /// </summary>
        InTargetArea = 1,
        /// <summary>
        /// Spindle accelerating
        /// </summary>
        Accelerating = 2,
        /// <summary>
        /// Spindle decelerating
        /// </summary>
        Decelerating = 3,
        /// <summary>
        /// Spindle configured but not active
        /// </summary>
        Parked = 4,
    }
    
    /// <summary>
    /// Turn direction of a CNC spindle.
    /// </summary>
    /// <seealso href="https://reference.opcfoundation.org/v104/CNC/v100/docs/7.2.3" />
    [Workstation.ServiceModel.Ua.DataTypeId("nsu=http://opcfoundation.org/UA/CNC;i=3001")]
    public enum CncSpindleTurnDirection
    {
        /// <summary>
        /// No rotation
        /// </summary>
        None = 0,
        /// <summary>
        /// Clockwise
        /// </summary>
        CW = 1,
        /// <summary>
        /// Counter Clockwise
        /// </summary>
        CCW = 2,
    }
    
    /// <summary>
    /// Structure of position elements.
    /// </summary>
    /// <seealso href="https://reference.opcfoundation.org/v104/CNC/v100/docs/7.3.2" />
    [Workstation.ServiceModel.Ua.BinaryEncodingId("nsu=http://opcfoundation.org/UA/CNC;i=5001")]
    [Workstation.ServiceModel.Ua.XmlEncodingId("nsu=http://opcfoundation.org/UA/CNC;i=5007")]
    [Workstation.ServiceModel.Ua.DataTypeId("nsu=http://opcfoundation.org/UA/CNC;i=3007")]
    public class CncPositionDataType : Workstation.ServiceModel.Ua.Structure
    {
        /// <summary>
        /// Position current value.
        /// </summary>
        public double ActPos { get; set; }
        
        /// <summary>
        /// Position setpoint value.
        /// </summary>
        public double CmdPos { get; set; }
        
        /// <summary>
        /// Remaining distance.
        /// </summary>
        public double RemDist { get; set; }
        
        /// <<inheritdoc/>
        public override void Encode(Workstation.ServiceModel.Ua.IEncoder encoder)
        {
            encoder.PushNamespace("http://opcfoundation.org/UA/CNC");
            
            encoder.WriteDouble("ActPos", ActPos);
            encoder.WriteDouble("CmdPos", CmdPos);
            encoder.WriteDouble("RemDist", RemDist);
            
            encoder.PopNamespace();
        }
        
        /// <<inheritdoc/>
        public override void Decode(Workstation.ServiceModel.Ua.IDecoder decoder)
        {
            decoder.PushNamespace("http://opcfoundation.org/UA/CNC");
            
            ActPos = decoder.ReadDouble("ActPos");
            CmdPos = decoder.ReadDouble("CmdPos");
            RemDist = decoder.ReadDouble("RemDist");
            
            decoder.PopNamespace();
        }
    }
    
}
